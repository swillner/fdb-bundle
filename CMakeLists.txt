cmake_minimum_required(VERSION 3.8)

project(fdb-bundle)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/lib/ecbuild/cmake)

include(ExternalProject)

set(FINAL_DIR ${PROJECT_BINARY_DIR}/final)

  if(DEFINED ENV{LIBRARY_PATH})
    string(REPLACE ":" ";" LIBRARY_PATH $ENV{LIBRARY_PATH})
    set(CMAKE_LIBRARY_PATH
        ${CMAKE_LIBRARY_PATH} ${LIBRARY_PATH}
        PARENT_SCOPE
    )
  endif()
  if(DEFINED ENV{LD_LIBRARY_PATH})
    string(REPLACE ":" ";" LD_LIBRARY_PATH $ENV{LD_LIBRARY_PATH})
    set(CMAKE_LIBRARY_PATH
        ${CMAKE_LIBRARY_PATH} ${LD_LIBRARY_PATH}
        PARENT_SCOPE
    )
  endif()

set(CMAKE_BUILD_TYPE
    Profile
    CACHE STRING "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel Profile." FORCE
)

if(CMAKE_BUILD_TYPE STREQUAL "Profile")
  set(ADDITIONAL_CFLAGS "-gdwarf -pg -g3 -fno-omit-frame-pointer")
  set(ADDITIONAL_CMAKE_ARGS
      -DCMAKE_C_FLAGS=${ADDITIONAL_CFLAGS} -DCMAKE_CXX_FLAGS=${ADDITIONAL_CFLAGS}
      -DCMAKE_EXE_LINKER_FLAGS=${ADDITIONAL_CFLAGS} -DCMAKE_SHARED_LINKER_FLAGS=${ADDITIONAL_CFLAGS}
      -DCMAKE_BUILD_TYPE=Debug
  )
else()
  set(ADDITIONAL_CFLAGS "")
  set(ADDITIONAL_CMAKE_ARGS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE})
endif()

externalproject_add(
  eccodes
  SOURCE_DIR "${PROJECT_SOURCE_DIR}/lib/eccodes"
  BINARY_DIR "${PROJECT_BINARY_DIR}/lib/eccodes"
  INSTALL_DIR "${FINAL_DIR}"
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -DENABLE_INSTALL_ECCODES_DEFINITIONS=OFF
             -DENABLE_INSTALL_ECCODES_SAMPLES=OFF ${ADDITIONAL_CMAKE_ARGS}
  BUILD_ALWAYS TRUE
)

externalproject_add(
  eckit
  SOURCE_DIR "${PROJECT_SOURCE_DIR}/lib/eckit"
  BINARY_DIR "${PROJECT_BINARY_DIR}/lib/eckit"
  INSTALL_DIR "${FINAL_DIR}"
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -DENABLE_TESTS=OFF ${ADDITIONAL_CMAKE_ARGS}
  BUILD_ALWAYS TRUE
)

externalproject_add(
  metkit
  SOURCE_DIR "${PROJECT_SOURCE_DIR}/lib/metkit"
  BINARY_DIR "${PROJECT_BINARY_DIR}/lib/metkit"
  INSTALL_DIR "${FINAL_DIR}"
  DEPENDS eccodes eckit
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -Deccodes_ROOT=${FINAL_DIR} -Deckit_ROOT=${FINAL_DIR}
             ${ADDITIONAL_CMAKE_ARGS}
  BUILD_ALWAYS TRUE
)

externalproject_add(
  fdb
  SOURCE_DIR "${PROJECT_SOURCE_DIR}/lib/fdb"
  BINARY_DIR "${PROJECT_BINARY_DIR}/lib/fdb"
  INSTALL_DIR "${FINAL_DIR}"
  DEPENDS eccodes eckit metkit
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -Deccodes_ROOT=${FINAL_DIR} -Deckit_ROOT=${FINAL_DIR}
             ${ADDITIONAL_CMAKE_ARGS} -Dmetkit_ROOT=${FINAL_DIR}
  BUILD_ALWAYS TRUE
)

install(DIRECTORY ${FINAL_DIR}/bin DESTINATION ${CMAKE_INSTALL_PREFIX})
install(DIRECTORY ${FINAL_DIR}/include DESTINATION ${CMAKE_INSTALL_PREFIX})
install(DIRECTORY ${FINAL_DIR}/lib DESTINATION ${CMAKE_INSTALL_PREFIX})
